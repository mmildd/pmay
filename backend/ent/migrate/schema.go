// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// ExaminationroomsColumns holds the columns for the "examinationrooms" table.
	ExaminationroomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "examinationroom_name", Type: field.TypeString},
	}
	// ExaminationroomsTable holds the schema information for the "examinationrooms" table.
	ExaminationroomsTable = &schema.Table{
		Name:        "examinationrooms",
		Columns:     ExaminationroomsColumns,
		PrimaryKey:  []*schema.Column{ExaminationroomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// NursesColumns holds the columns for the "nurses" table.
	NursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "nurse_name", Type: field.TypeString},
		{Name: "nurse_email", Type: field.TypeString},
		{Name: "nurse_password", Type: field.TypeString},
		{Name: "nurse_tel", Type: field.TypeString},
	}
	// NursesTable holds the schema information for the "nurses" table.
	NursesTable = &schema.Table{
		Name:        "nurses",
		Columns:     NursesColumns,
		PrimaryKey:  []*schema.Column{NursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OperativesColumns holds the columns for the "operatives" table.
	OperativesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "operative_name", Type: field.TypeString, Unique: true},
	}
	// OperativesTable holds the schema information for the "operatives" table.
	OperativesTable = &schema.Table{
		Name:        "operatives",
		Columns:     OperativesColumns,
		PrimaryKey:  []*schema.Column{OperativesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OperativerecordsColumns holds the columns for the "operativerecords" table.
	OperativerecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "operative_time", Type: field.TypeTime},
		{Name: "Examinationroom_id", Type: field.TypeInt, Nullable: true},
		{Name: "Nurse_id", Type: field.TypeInt, Nullable: true},
		{Name: "Operative_id", Type: field.TypeInt, Nullable: true},
		{Name: "Tool_id", Type: field.TypeInt, Nullable: true},
	}
	// OperativerecordsTable holds the schema information for the "operativerecords" table.
	OperativerecordsTable = &schema.Table{
		Name:       "operativerecords",
		Columns:    OperativerecordsColumns,
		PrimaryKey: []*schema.Column{OperativerecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "operativerecords_examinationrooms_Examinationroom_Operativerecord",
				Columns: []*schema.Column{OperativerecordsColumns[2]},

				RefColumns: []*schema.Column{ExaminationroomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "operativerecords_nurses_Nurse_Operativerecord",
				Columns: []*schema.Column{OperativerecordsColumns[3]},

				RefColumns: []*schema.Column{NursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "operativerecords_operatives_Operative_Operativerecord",
				Columns: []*schema.Column{OperativerecordsColumns[4]},

				RefColumns: []*schema.Column{OperativesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "operativerecords_tools_Tool_Operativerecord",
				Columns: []*schema.Column{OperativerecordsColumns[5]},

				RefColumns: []*schema.Column{ToolsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ToolsColumns holds the columns for the "tools" table.
	ToolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tool_name", Type: field.TypeString},
	}
	// ToolsTable holds the schema information for the "tools" table.
	ToolsTable = &schema.Table{
		Name:        "tools",
		Columns:     ToolsColumns,
		PrimaryKey:  []*schema.Column{ToolsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ExaminationroomsTable,
		NursesTable,
		OperativesTable,
		OperativerecordsTable,
		ToolsTable,
	}
)

func init() {
	OperativerecordsTable.ForeignKeys[0].RefTable = ExaminationroomsTable
	OperativerecordsTable.ForeignKeys[1].RefTable = NursesTable
	OperativerecordsTable.ForeignKeys[2].RefTable = OperativesTable
	OperativerecordsTable.ForeignKeys[3].RefTable = ToolsTable
}
